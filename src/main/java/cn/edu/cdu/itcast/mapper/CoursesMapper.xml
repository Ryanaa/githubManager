<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.cdu.itcast.mapper.CoursesMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.cdu.itcast.po.Courses" >
    <id column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="semester_id" property="semesterId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, course_name, semester_id, teacher_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.cdu.itcast.po.CoursesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from courses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from courses
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from courses
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.cdu.itcast.po.CoursesExample" >
    delete from courses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.cdu.itcast.po.Courses" >
    insert into courses (course_id, course_name, semester_id, 
      teacher_id)
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{semesterId,jdbcType=INTEGER}, 
      #{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cdu.itcast.po.Courses" >
    insert into courses
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="semesterId != null" >
        semester_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="semesterId != null" >
        #{semesterId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cdu.itcast.po.CoursesExample" resultType="java.lang.Integer" >
    select count(*) from courses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update courses
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.semesterId != null" >
        semester_id = #{record.semesterId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update courses
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      semester_id = #{record.semesterId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.cdu.itcast.po.Courses" >
    update courses
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="semesterId != null" >
        semester_id = #{semesterId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.cdu.itcast.po.Courses" >
    update courses
    set course_name = #{courseName,jdbcType=VARCHAR},
      semester_id = #{semesterId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <!--附加mapper，查询出当前老师已选的所有课程-->
  <select id="getSelectedCourses" resultType="cn.edu.cdu.itcast.po.Courses" >
    SELECT DISTINCT a.*,b.* FROM user_inf as a,courses AS b WHERE a.user_info_id=b.teacher_id
    <!--查询出当前老师已选的所有课程-->
    <if test="userInfoId != 0" >
      and a.user_info_id=#{userInfoId}
    </if>
    <!--查询出当前所有老师已选的所有课程，和当前学生未选过的课程-->
    <if test="userInfoId == 0" >
    and b.teacher_id is not null
    </if>
  </select>
<!--附加mapper，教师选课，查出当前未选的和非自己选的课-->
  <select id="getUnSelectedCourses" parameterType="int" resultType="cn.edu.cdu.itcast.po.Courses" >
    select * from courses WHERE teacher_id!=#{teacherId} OR teacher_id is null
  </select>
  <!--附加mapper，批量删除选课-->
  <update id="deleteBatch">
    update courses set teacher_id=null where course_id in
    <foreach item="courseId" collection="array" open="(" separator="," close=")">
      #{courseId}
    </foreach>

  </update>
<!--附加mapper查出所有学生已选的课程,学生用-->
 <select id="querySelectedCourses" resultType="cn.edu.cdu.itcast.po.Courses" parameterType="int" >
SELECT DISTINCT
a.student_select_course_id,
b.course_id,
b.course_name,
c.`name`,
a.student_id
FROM student_select_course as a,courses as b, user_inf as c
WHERE b.course_id=a.course_id and  a.student_id= c.user_info_id and c.user_info_id=#{studentId}

 </select>
<!--学生批量退选课程-->
  <delete id="stuDeleteCourses">
    delete from student_select_course where student_select_course_id in
    <foreach item="student_select_course_id" collection="array" open="(" separator="," close=")">
      #{student_select_course_id}
    </foreach>

  </delete>
  <!--通过课程id查询出选此课的学生-->
  <select id="getStudentSelected" parameterType="int" resultType="cn.edu.cdu.itcast.po.Courses">
    SELECT b.student_id,b.student_select_course_id, a.`name`,c.course_name FROM user_inf as a,student_select_course as b, courses as c
where b.student_id=a.user_info_id and b.course_id=c.course_id and c.course_id=#{courseId}
  </select>

</mapper>
